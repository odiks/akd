curl -u admin:admin -X POST "http://<GRAYLOG_HOST>:9000/api/views/search/sync" \
-H "Content-Type: application/json" \
-H "Accept: application/json" \
-H "X-Requested-By: curl" \
-d '{
  "query": {
    "query": "source:scan AND _exists_:code_dossier",
    "timerange": {
      "type": "relative",
      "range": 86400
    }
  },
  "filter": null,
  "fields_in_message_list": ["code_dossier"],
  "limit": 150,
  "sort": [
    {
      "field": "timestamp",
      "order": "desc"
    }
  ]
}'


filter {
  if [service] == "HTTP" and [method] == "POST" {
    aggregate {
      task_id => "%{sessionid}"
      code => "
        previous_sentbyte = map['last_sentbyte'] || 0
        current_sentbyte = event.get('sentbyte').to_i
        event.set('real_sentbyte', current_sentbyte - previous_sentbyte)
        map['last_sentbyte'] = current_sentbyte
      "
      map_action => "create_or_update"
      timeout => 30  # Supprime la session après 30s d'inactivité
    }
  }

rule "Set OpenSearch ID from Kafka event_id"
when
    has_field("event_id")
then
    set_field("_id", to_string($message.event_id));
end
}

rule "Set OpenSearch ID from fingerprint"
when
    has_field("fingerprint")
then
    set_field("_id", to_string($message.fingerprint));
end

filter {
  fingerprint {
    source => ["id", "updateAt", "date"]
    target => "fingerprint"
    method => "MURMUR3_128"
  }

  aggregate {
    task_id => "%{fingerprint}"
    code => "map['seen'] ||= 1"
    timeout => 300 # Garde les fingerprints pendant 5 minutes
  }

  if [seen] {
    drop { } # Supprime les doublons détectés
  }
}

avc:\s+%{WORD:avc_action}\s+\{\s*%{WORD:avc_permission}\s*\}\s+for\s+pid=%{NUMBER:pid}\s+comm="%{DATA:comm}"(?:\s+name="%{DATA:name}")?\s+dev="%{DATA:dev}"\s+ino=%{NUMBER:ino}\s+scontext=%{DATA:scontext}\s+tcontext=%{DATA:tcontext}\s+tclass=%{DATA:tclass}

avc:\s+%{WORD:avc_action}\s+\{\s*%{WORD:avc_permission}\s*\}\s+for\s+pid=%{NUMBER:avc_pid}\s+comm="%{DATA:comm}"(?:\s+path="(?<path>[^"]+)")?\s+dev="%{DATA:dev}"\s+ino=%{NUMBER:ino}\s+scontext=%{DATA:scontext}\s+tcontext=%{DATA:tcontext}\s+tclass=%{DATA:tclass}
