les journaux d’événements Windows AD vers Kafka sans avoir à déployer Winlogbeat (ou tout autre agent Beats) directement sur les DC. Une architecture fréquente consiste à utiliser le mécanisme de Windows Event Forwarding (WEF) afin de collecter les événements AD sur un serveur dit « collecteur » (Event Collector) et ensuite, depuis ce collecteur, les envoyer vers Kafka via Logstash ou tout autre outil compatible.



1. Principe global sans installer Winlogbeat sur les DC
	1.	Windows Event Forwarding (WEF) :
	•	Les Domain Controllers (DC) transfèrent leurs journaux (Security, System, etc.) vers un serveur Windows appelé « Event Collector ».
	•	Le protocole WEF est nativement disponible dans Windows, sans nécessiter d’installation supplémentaire sur les DC.
	•	Les DC n’ont donc aucun agent supplémentaire à installer.
	2.	Serveur Collecteur (Windows) :
	•	Sur ce serveur, vous configurez la Subscription WEF (mode Source-Initiated ou Collector-Initiated).
	•	Les événements sont stockés localement dans un nouveau « Forwarded Events » log, ou dans un autre canal si vous préférez.
	3.	Export vers Kafka :
	•	Sur le collecteur, vous pouvez utiliser Logstash, nxlog ou même Beats (comme Winlogbeat, mais uniquement sur le collecteur, pas sur les DC) pour extraire ces événements et les envoyer vers Kafka.
	•	Ainsi, vos Domain Controllers n’exposent pas directement un agent Beats ou un sidecar.


2. Avantages et inconvénients de WEF

Avantages
	1.	Réduction de la surface d’attaque : pas d’agent supplémentaire installé sur les Domain Controllers.
	2.	Administration centralisée : la configuration WEF se fait par GPO, ce qui facilite les déploiements sur plusieurs DC.
	3.	Évolutivité : vous pouvez ajouter plus de serveurs à la Subscription WEF sans toucher aux DC.
	4.	Économie de ressources : un seul point de collecte à surveiller et maintenir.

Inconvénients
	1.	Charge sur le Collecteur : le serveur Windows Collecteur doit supporter le flux de logs provenant de tous les DC (RAM, stockage, CPU).
	2.	Latency : un léger délai peut s’introduire entre l’émission d’un événement sur le DC et sa collecte, surtout s’il y a de nombreux logs ou si le réseau est chargé.
	3.	Complexité initiale : la mise en place de WEF/GPO peut être un peu plus complexe à configurer que l’installation d’un simple agent.	

3. Mise en place concrète (exemple)

a) Configuration WEF sur les DC
	1.	GPO : Créer ou éditer une GPO appliquée aux Domain Controllers.
	2.	Paramètres WEF : Dans la GPO, vous configurez le DC pour qu’il envoie les journaux sélectionnés (Ex : Security, Sysmon, etc.) vers le Collecteur.
	3.	Subscription : Définissez si vous voulez un mode Source-initiated (les DC envoient) ou Collector-initiated (le collecteur interroge les DC).

b) Configuration du serveur Collecteur
	1.	Activer le service « Windows Event Collector » (wecsvc).
	2.	Créer la Subscription : définir la source (DC), le ou les canaux d’événements (ex : Security, Directory Service, etc.), et la destination (Forwarded Events).
	3.	Accès réseau & sécurité : la communication utilise généralement HTTP ou HTTPS (WinRM). Assurez-vous d’avoir configuré vos pare-feu, ainsi que Kerberos/NTLM selon votre environnement.

c) Envoi vers Kafka
	1.	Installation de l’outil d’export (Logstash, NxLog, Winlogbeat, etc.) sur le Collecteur.
	2.	Configuration pour lire le log local « Forwarded Events » (ou le canal choisi) :



input {
    # Exemple Logstash
    winlog {
      type  => "wineventlog"
      # Spécifier ici le canal ForwardedEvents
      eventlog => "ForwardedEvents"
    }
}
output {
    kafka {
      # Paramètres de connexion à Kafka
      bootstrap_servers => "mon-cluster-kafka:9092"
      topic_id          => "mes_evenements_dc"
    }
}

	3.	Envoi vers Graylog :
	•	Si vous faites d’abord Kafka → Logstash → Graylog, il suffit de configurer la partie output de Logstash en sortie (après Kafka).
	•	Ou bien Kafka → Graylog directement si Graylog est configuré comme consommateur Kafka.




4. Points d’attention sécurité
	1.	Authentification et chiffrement :
	•	Sur le flux WEF (utilisation de Kerberos, ou HTTPS WinRM si requis),
	•	Sur la connexion Kafka (SSL, SASL, etc.).
	2.	Segmentation réseau :
	•	Le collecteur Windows doit être dans une zone de confiance côté AD,
	•	Kafka et Logstash doivent être dans une DMZ ou zone d’agrégation selon votre architecture réseau.
	3.	Politique de rétention :
	•	Sur la partition Kafka (taille et durée de rétention),
	•	Sur le collecteur pour éviter de saturer le disque local.



En résumé, oui, il est possible (et assez courant) de ne pas installer un agent Beats sur les Domain Controllers pour réduire l’exposition et la maintenance. Le schéma recommandé est :
	1.	WEF sur vos DC → Collecteur Windows
	2.	Collecteur Windows → (via Logstash/NxLog/Beats) → Kafka
	3.	Kafka → Graylog

Cela vous permet de limiter l’exposition du domaine tout en centralisant la collecte et en conservant votre flux de log vers Kafka.









