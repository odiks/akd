filter {
  if [program] == "postfix" {
    grok {
      match => {
        "message" => [
          # Queue ID logs
          "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:host} %{WORD:program}(?:\[%{NUMBER:pid}\])?: %{NOTSPACE:queue_id}: %{GREEDYDATA:postfix_message}",

          # From logs
          "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:host} %{WORD:program}(?:\[%{NUMBER:pid}\])?: from=<%{EMAILADDRESS:from}>, size=%{NUMBER:size}, nrcpt=%{NUMBER:nrcpt} %{GREEDYDATA:postfix_message}",

          # To logs
          "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:host} %{WORD:program}(?:\[%{NUMBER:pid}\])?: to=<%{EMAILADDRESS:to}>, relay=%{NOTSPACE:relay}, delay=%{NUMBER:delay}, delays=%{GREEDYDATA:delays}, dsn=%{NOTSPACE:dsn}, status=%{NOTSPACE:status} %{GREEDYDATA:postfix_message}",

          # Other postfix logs
          "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:host} %{WORD:program}(?:\[%{NUMBER:pid}\])?: %{GREEDYDATA:postfix_message}"
        ]
      }
    }

    # Optionally, you can parse delays further if you want individual delay components
    if [delays] {
      dissect {
        mapping => {
          "delays" => "%{delay_before_queue}/%{delay_in_queue}/%{delay_connection}/%{delay_transmission}"
        }
      }
    }

    # Add fields for easier searching based on status
    if [status] {
      mutate {
        add_field => { "status_code" => "%{status}" }
      }
    }

    date {
      match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }
  }
}
