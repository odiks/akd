kafka - 
listeners=SSL://0.0.0.0:9093
ssl.keystore.location=/path/to/server.keystore.jks
ssl.keystore.password=keystore_password
ssl.truststore.location=/path/to/server.truststore.jks
ssl.truststore.password=truststore_password
ssl.client.auth=required

rsyslog : 
module(load="omkafka")

template(name="kafkaFormat" type="string" string="%msg%\n")

action(
  type="omkafka"
  topic="secure-logs"
  broker=["broker1:9093", "broker2:9093"]
  template="kafkaFormat"
  confParam=[
    "security.protocol=SSL",
    "ssl.truststore.location=/etc/rsyslog/certs/kafka.truststore.jks",
    "ssl.truststore.password=truststore_password",
    "ssl.keystore.location=/etc/rsyslog/certs/kafka.keystore.jks",
    "ssl.keystore.password=keystore_password",
    "ssl.key.password=key_password"
  ]
)

redpanda-console : 

kafka:
  brokers:
    - broker1:9093
    - broker2:9093
  tls:
    enabled: true
    caFile: /path/to/ca.crt
    certFile: /path/to/client.crt
    keyFile: /path/to/client.key

logstash : 

output {
  kafka {
    bootstrap_servers => "broker1:9093,broker2:9093"
    topic_id => "secure-logs"
    security_protocol => "SSL"
    ssl_truststore_location => "/path/to/truststore.jks"
    ssl_truststore_password => "truststore_password"
    ssl_keystore_location => "/path/to/keystore.jks"
    ssl_keystore_password => "keystore_password"
    ssl_key_password => "key_password"
  }
}

input GELF Kafka 
security.protocol=SSL
ssl.truststore.location=/etc/graylog/certs/truststore.jks
ssl.truststore.password=yourTruststorePassword
ssl.keystore.location=/etc/graylog/certs/keystore.jks
ssl.keystore.password=yourKeystorePassword
ssl.key.password=yourKeyPassword





