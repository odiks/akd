ruby {
    code => '
        new_event = {}
        event.to_hash.each do |k, v|
            new_key = k.gsub(/^ESA/, "")  # Supprime le préfixe "ESA"
            new_event[new_key] = v
        end
        event.replace(new_event)
    '
}

filter {
    grok {
        match => {
            "[cisco_secure_email_gateway][log][message]" => 
            "^(?:%{DATA:_tmp.timestamp} )?CEF:%{NUMBER:[cisco_secure_email_gateway][log][cef_format_version]}\|
            %{WORD:[cisco_secure_email_gateway][log][appliance][vendor]}\|
            %{DATA:[cisco_secure_email_gateway][log][appliance][product]}\|
            %{DATA:[cisco_secure_email_gateway][log][appliance][version]}\|
            %{DATA:[cisco_secure_email_gateway][log][event_class_id]}\|
            %{DATA:[cisco_secure_email_gateway][log][event][name]}\|
            %{WORD:[event][severity]}\|
            %{GREEDYDATA:[_tmp][details]}$"
        }
    }
}



filter {
    # Vérifier si le champ `ESAAttachmentDetails` existe
    if [ESAAttachmentDetails] {
        
        # Initialiser un compteur pour générer des clés uniformes
        ruby {
            code => '
                # Initialiser un hash vide pour contenir les nouveaux champs
                new_fields = {}
                index = 1  # Initialiser un compteur pour générer des clés uniformes

                # Parcourir chaque fichier dans ESAAttachmentDetails
                event.get("ESAAttachmentDetails").each do |file_name, file_details|
                    # Si AMP et BodyScanner existent, les ajouter en top-level avec des noms de champs uniformes
                    if file_details["AMP"]
                        new_fields["fileHash_#{index}"] = file_details["AMP"]["fileHash"]
                        new_fields["Verdict_#{index}"] = file_details["AMP"]["Verdict"]
                    end
                    if file_details["BodyScanner"]
                        new_fields["fsize_#{index}"] = file_details["BodyScanner"]["fsize"]
                    end
                    # Incrémenter l'index pour le prochain fichier
                    index += 1
                end

                # Ajouter ces nouveaux champs dans l'événement
                event.set("attachment_details", new_fields)
            '
        }

        # Optionnel : vous pouvez supprimer l'ancien champ `ESAAttachmentDetails`
        mutate {
            remove_field => ["ESAAttachmentDetails"]
        }
    }
}
