# Modules requis
module(load="imuxsock") # Input module for local system logs
module(load="imklog")   # Kernel log input
module(load="omfwd")    # Forwarding module
module(load="builtin:omfile") # Local file output
module(load="queue")    # Queue support

# Paramètres globaux
global(workDirectory="/var/spool/rsyslog") # Répertoire pour le spool local
global(defaultNetstreamDriver="gtls")     # Optionnel pour TLS (ajuster si nécessaire)
global(action.resumeRetryCount="-1")      # Réessayer indéfiniment si un serveur est indisponible

# Configuration de la file d'attente (spooling)
queue.type="LinkedList"                   # Utiliser une file chaînée
queue.filename="syslog_spool"             # Nom de la file pour stockage
queue.maxdiskspace="1g"                   # Taille max du spool (1 Go ici, ajustez selon vos besoins)
queue.saveonshutdown="on"                 # Sauvegarder les messages non envoyés au redémarrage
queue.dequeueBatchSize="1000"             # Nombre de messages à traiter par lot

# Paramètres des serveurs Syslog avec DNS round-robin
action(
    type="omfwd"
    target="syslog"          # DNS avec round-robin (syslog-1, syslog-2, syslog-3)
    port="514"               # Port Syslog UDP standard
    protocol="udp"           # Protocole à utiliser (ajustez à TCP si nécessaire)
    name="dns_round_robin"
    action.execOnlyWhenPreviousIsSuspended="on" # Priorité à syslog-1, puis syslog-2, etc.
)

# Option pour spooling local si aucun serveur Syslog n'est accessible
if (not $action.complete) then {
    action(type="omfile" file="/var/log/syslog_spool.log")
}

# Logs locaux (pour conservation standard)
*.* /var/log/messages

# Filtre spécifique si besoin (exemple: envoyer uniquement authpriv logs)
authpriv.* action(
    type="omfwd"
    target="syslog"
    port="514"
    protocol="udp"
)






# chargement des modules requis
#:module(load="imuxsock")        # Entrée pour logs locaux du système
#module(load="imklog")          # Entrée pour les logs du kernel
module(load="builtin:omfwd")           # Module de forwarding
module(load="builtin:omfile")  # Sortie vers fichiers locaux

# Paramètres globaux
global(workDirectory="/var/spool/rsyslog")  # Répertoire pour le spool
#global(action.resumeRetryCount="-1")         # Réessayer indéfiniment

# Configuration de la file d’attente
# On utilise une file chaînée, un fichier de queue nommé "syslog_spool",
# on sauvegarde le spool au redémarrage et on autorise jusqu’à 1 Go de données.
action(type="omfwd"
    target="syslog"                   # Le DNS round-robin (résout vers syslog-1, syslog-2, syslog-3)
    port="514"
    protocol="udp"                    # Peut être "tcp" si besoin
    name="dns_round_robin"
    action.execOnlyWhenPreviousIsSuspended="on" # Essayer le suivant si le précédent est down
    queue.type="LinkedList"
    queue.filename="syslog_spool"
    queue.maxdiskspace="1g"
    queue.saveonshutdown="on"
    queue.dequeueBatchSize="1000"
)

# Si aucun serveur n'est disponible, les messages ne pouvant être délivrés 
# restent dans la queue. Ils seront renvoyés dès qu'un serveur redevient disponible.

# Logs locaux (conservation standard)
*.* /var/log/messages

# Optionnel : Si vous souhaitez stocker en clair les messages non délivrés
# dans un fichier local en plus (utile pour diagnostic)
#if (not $action.complete) then {
#    action(type="omfile" file="/var/log/syslog_spool_failed.log")
#}

